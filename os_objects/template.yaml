apiVersion: v1
kind: Template
metadata:
  creationTimestamp: null
  name: weather-on-shift-template
  annotations:
      description: "A sample go project that pulls Raleigh weather temperature"
parameters:
-
  name: KEY
  description: "openweathermap API key"
  required: true
- 
  name: PROJECT
  description: "Current project name"
  required: true
  value: "myproject"
-
  name: IMAGE_REPO
  description: "Local image repository URI"
  required: true
  value: "172.30.1.1:5000"
objects:
- apiVersion: v1
  kind: BuildConfig
  metadata:
    creationTimestamp: null
    labels:
      app: weather-on-shift
    name: weather-on-shift
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: weather-on-shift:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: https://github.com/jbornemann/weather-on-shift
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: go-s2i:17
          namespace: "${PROJECT}"
      type: Source
    triggers: []
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    creationTimestamp: null
    generation: 1
    labels:
      app: weather-on-shift
    name: weather-on-shift
  spec:
    replicas: 1
    selector:
      app: weather-on-shift
      deploymentconfig: weather-on-shift
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: weather-on-shift
          deploymentconfig: weather-on-shift
      spec:
        containers:
        - image: "${IMAGE_REPO}/${PROJECT}/weather-on-shift:latest"
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8080
            timeoutSeconds: 1
          name: weather-on-shift
          ports:
          - containerPort: 8080
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources: {}
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /data/weather
            name: weather-on-shift-secret-volume
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - name: weather-on-shift-secret-volume
          secret:
            defaultMode: 420
            secretName: weather-on-shift-secret
    test: false
    triggers: []
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: weather-on-shift
    name: open-weathermap-service
  spec:
    externalName: api.openweathermap.org
    ports: null
    sessionAffinity: None
    type: ExternalName
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: null
    labels:
      app: weather-on-shift
    name: weather-on-shift-service
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: weather-on-shift
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2017-06-01T15:04:41Z
    creationTimestamp: null
    generation: 2
    labels:
      app: weather-on-shift
    name: go-s2i
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "bornemannjs/go-s2i:17"
      generation: 2
      importPolicy: {}
      name: "17"
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/image.dockerRepositoryCheck: 2017-06-01T15:04:43Z
    creationTimestamp: null
    generation: 2
    labels:
      app: weather-on-shift
    name: weather-on-shift
  spec:
    tags:
    - annotations: null
      from:
        kind: DockerImage
        name: "${IMAGE_REPO}/${PROJECT}/weather-on-shift:latest"
      generation: 2
      importPolicy: {}
      name: latest
      referencePolicy:
        type: Source
  status:
    dockerImageRepository: ""
- apiVersion: v1
  data:
    key: "${KEY}"
  kind: Secret
  metadata:
    creationTimestamp: null
    labels:
      app: weather-on-shift
    name: weather-on-shift-secret
  type: Opaque
